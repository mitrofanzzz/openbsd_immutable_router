{
  "builders": [
    {
      "type": "qemu",
      "accelerator": "kvm",
      "boot_wait": "25s",
      "disk_interface": "virtio",
      "disk_size": 4096,
      "format": "raw",
      "headless": false,
      "iso_url": "http://{{user `openbsd_mirror`}}/{{user `openbsd_mirror_directory`}}/{{user `architecture`}}/install65.iso",
      "iso_checksum_url": "https://{{user `openbsd_mirror`}}/{{user `openbsd_mirror_directory`}}/{{user `architecture`}}/SHA256",
      "iso_checksum_type": "sha256",
      "qemuargs": [
        ["-m", "1024m"],
        ["-smp", "2"],
        ["-k", "en-gb"]
      ],
      "shutdown_command": "halt -p",
      "ssh_username": "root",
      "ssh_password": "{{user `root_password`}}",
      "ssh_port": 22,
      "ssh_wait_timeout": "1200s",
      "vm_name": "{{user `hostname`}}",
      "http_directory": "packer_http",
      "boot_command": [
        "S<enter>",
        "cat <<EOF >>install.conf<enter>",
        "Choose your keyboard layout = {{user `keyboard_layout`}}<enter>",
        "System hostname = {{user `hostname`}}<enter>",
        "Password for root = {{user `root_password`}}<enter>",
        "Start sshd(8) by default = yes<enter>",
        "Do you expect to run the X Window System = no<enter>",
        "Change the default console to com0 = yes<enter>",
        "Which speed should com0 use = 115200<enter>",
        "Setup a user = {{user `user`}}<enter>",
        "Full name for user {{user `user`}} = {{user `user_full_name`}}<enter>",
        "Password for user {{user `user`}} = {{user `user_password`}}<enter>",
        "Allow root ssh login = yes<enter>",
        "What timezone are you in = {{user `timezone`}}<enter>",
        "Location of sets = http<enter>",
        "HTTP Server = {{user `openbsd_mirror`}}<enter>",
        "Server directory = {{user `openbsd_mirror_directory`}}/{{user `architecture`}}<enter>",
        "Set name(s) = -comp*.tgz -game*.tgz -x* +bsd.mp<enter>",
        "Cannot determine prefetch area. Continue without verification = yes <enter>",
        "URL to autopartitioning template = http://{{ .HTTPIP }}:{{ .HTTPPort }}/autodisklabel<enter>",
        "EOF<enter>",
        "install -af install.conf ; reboot<enter>"
        ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "environment_vars": ["PKG_PATH=http://{{user `openbsd_mirror`}}/{{user `openbsd_mirror_directory`}}/packages/{{user `architecture`}}/"],
      "inline": ["pkg_add ansible python%2.7", "rm -f /usr/bin/python", "ln -s /usr/local/bin/python2.7 /usr/bin/python"]
    },
    {
      "type": "file",
      "source": "./files",
      "destination": "/tmp"
    },
    {
      "type": "file",
      "source": "./templates",
      "destination": "/tmp"
    },
    {
      "type": "file",
      "source": "config.json",
      "destination": "/tmp/config.json"
    },
    {
      "type": "ansible-local",
      "playbook_file": "provision.yml",
      "playbook_dir": "ansible",
      "staging_directory": "/tmp/ansible",
      "clean_staging_directory": true,
      "extra_arguments": ["--diff"]
    },
    {
      "type": "shell",
      "inline": ["rm -rf /root/.ansible /root/.ssh"]
    }
  ]
}
